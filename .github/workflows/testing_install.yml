---
# Runs several checks on the nilearn package:
#
# - tries to install Nilearn from wheel
#   & check installation on all operating systems
#
# - ensure thath the nilearn wheel is not over a certain size
#
# - ensure the whole nilearn install with all its transitive dependencies
#   is not too large
#
###
name: test installation

on:
    push:
        branches:
        -   main
    pull_request:
        branches:
        -   '*'

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

# Force to use color
env:
    FORCE_COLOR: true

jobs:
    test_install:
        if: github.repository == 'nilearn/nilearn'
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
        name: check install on ${{ matrix.os }} with latest package versions
        defaults:
            run:
                shell: bash
        steps:
        -   name: Checkout nilearn
            uses: actions/checkout@v5
        -   name: Setup python
            uses: actions/setup-python@v6
            with:
                python-version: '3.10'
        -   name: Install dependencies for building Nilearn
            run: |
                set -e
                python -m pip install --upgrade pip
                pip install --prefer-binary build
        -   name: Build Nilearn
            shell: bash {0}
            run: |
                set -e
                python -m build
                ls -lrth dist
        -   name: Install Nilearn from wheel & check installation
            shell: bash {0}
            run: |
                set -e
                pip install dist/nilearn-*-py3-none-any.whl
                python -c "import nilearn"

    check_wheel_size:
        if: github.repository == 'nilearn/nilearn'
        runs-on: ubuntu-latest
        name: check wheel size
        defaults:
            run:
                shell: bash
        steps:
        -   name: Checkout nilearn
            uses: actions/checkout@v5
        -   name: Setup python
            uses: actions/setup-python@v6
            with:
                python-version: '3.10'
        -   name: Install dependencies for building Nilearn
            run: |
                set -e
                python -m pip install --upgrade pip
                pip install --prefer-binary build

        -   name: Check wheel size
            run: bash build_tools/github/wheel_size_check.sh


    check_install_size:
        if: github.repository == 'nilearn/nilearn'
        runs-on: ubuntu-latest
        name: check install size on with oldest dependencies
        defaults:
            run:
                shell: bash
        steps:
        -   name: Checkout nilearn
            uses: actions/checkout@v5
        -   name: Setup python
            uses: actions/setup-python@v6
            with:
                python-version: '3.10'
        -   name: Install dependencies for building Nilearn
            run: |
                set -e
                python -m pip install --upgrade pip
                pip install --prefer-binary build

        -   name: Check wheel size
            run: bash build_tools/github/whole_install_size_check.sh
