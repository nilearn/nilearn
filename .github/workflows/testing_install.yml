---
# Tries to install Nilearn from wheel & check installation on all operating systems.
###
name: test installation

on:
    push:
        branches:
        -   main
    pull_request:
        branches:
        -   '*'

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    test_install:
        if: github.repository == 'nilearn/nilearn'
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
                python-version: ['3.10']
        name: ${{ matrix.os }} with Python ${{ matrix.python-version }} and latest package versions
        defaults:
            run:
                shell: bash
        steps:
        -   name: Checkout nilearn
            uses: actions/checkout@v5
        -   name: Setup python
            uses: actions/setup-python@v6
            with:
                python-version: ${{ matrix.python-version }}
        -   name: Install dependencies for building Nilearn
            shell: bash {0}
            run: |
                set -e
                python -m pip install --upgrade pip
                pip install --prefer-binary build
        -   name: Build Nilearn
            shell: bash {0}
            run: |
                set -e
                python -m build
                ls -lrth dist
        -   name: Install Nilearn from wheel & check installation
            shell: bash {0}
            run: |
                set -e
                pip install dist/nilearn-*-py3-none-any.whl
                python -c "import nilearn"

        -   name: Check wheel size vs PyPI
            shell: bash {0}
            run: |
                set -e

                # Path to newly built wheel
                NEW_WHEEL=$(ls dist/nilearn-*-py3-none-any.whl)

                # Get size of new wheel in bytes
                NEW_SIZE=$(stat -c%s "$NEW_WHEEL" || stat -f%z "$NEW_WHEEL")

                echo "New wheel size: $NEW_SIZE bytes"

                # Download latest wheel from PyPI
                pip install --upgrade pip
                pip download nilearn --only-binary=:all: --no-deps -d /tmp
                OLD_WHEEL=$(ls /tmp/nilearn-*-py3-none-any.whl)

                OLD_SIZE=$(stat -c%s "$OLD_WHEEL" || stat -f%z "$OLD_WHEEL")

                echo "Latest PyPI wheel size: $OLD_SIZE bytes"

                # Allow up to 20% increase
                LIMIT=$(( OLD_SIZE * 120 / 100 ))

                if [ "$NEW_SIZE" -gt "$LIMIT" ]; then
                    echo "❌ Wheel size regression detected!"
                    echo "New:  $NEW_SIZE bytes"
                    echo "Old:  $OLD_SIZE bytes"
                    exit 1
                else
                    echo "✅ Wheel size check passed"
                fi
