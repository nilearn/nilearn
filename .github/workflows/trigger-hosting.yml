---
# Workflow to trigger the job that will host the documentation
name: Documentation push trigger
on:
    # workflow_run:
    # # Run the workflow after the separate "DocumentationBuilder" workflow completes
    #     workflows: [flake8]
    #     types: [completed, in_progress]
    pull_request:
        branches:
        -   '*'

jobs:
    push:
        runs-on: ubuntu-latest
    # Run the job only if the "DocumentationBuilder" workflow succeeded
    # Prevents this workflow from running on a fork.
    # To test this workflow on a fork remove the `github.repository == nilearn/nilearn` condition
        # if: github.repository == 'nilearn/nilearn' && github.event.workflow_run.conclusion == 'success'
        steps:
        -   name: Display
            run: echo "triggering hosting of doc on Circle-CI"

        -   name: Checkout nilearn
            uses: actions/checkout@v4

        -   name: Dump GitHub context
            env:
                GITHUB_CONTEXT: ${{ toJson(github) }}
            run: echo "$GITHUB_CONTEXT"


        -   name: Trigger hosting jobs
            run: |
                GITHUB_RUN_URL="https://nightly.link/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                STATUS="success"
                curl --request POST \
                --url https://circleci.com/api/v2/project/gh/${{ github.repository }}/pipeline \
                --header "Circle-Token: ${{ secrets.CIRCLE_CI_TOKEN }}" \
                --header "content-type: application/json" \
                --header "x-attribution-actor-id: github_actions" \
                --header "x-attribution-login: github_actions" \
                --data \{\"branch\":\"main\",\"parameters\":\{\"GITHUB_RUN_URL\":\"$GITHUB_RUN_URL\",\"STATUS\":\"$STATUS\"\}\}

        #     run: bash build_tools/github/trigger_hosting.sh
        #     env:
        #         CIRCLE_CI_TOKEN: ${{ secrets.CIRCLE_CI_TOKEN }}
        #         EVENT: ${{ github.event.workflow_run.event }}
        #         RUN_ID: ${{ github.event.workflow_run.id }}
        #         HEAD_BRANCH: ${{ github.event.workflow_run.head_branch }}
        #         COMMIT_SHA: ${{ github.event.workflow_run.head_sha }}
        #         REPO_NAME: ${{ github.event.workflow_run.head_repository.full_name }}
        #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #         STATUS: ${{ github.event.workflow_run.conclusion }}
