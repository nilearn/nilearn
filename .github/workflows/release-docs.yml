---
name: Build release docs

on:
    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

    # This will run automatically after tagging the release commit on main
    push:
        branches:
        -   main
        tags:
        -   '*'

jobs:
    release-docs:
        if: github.repository == 'nilearn/nilearn'
        runs-on: ubuntu-latest
        timeout-minutes: 360
        env:
            BROWSER: /usr/bin/firefox
            DISPLAY: :99.0
            NILEARN_DATA: /home/runner/work/nilearn/nilearn/nilearn_data
        defaults:
            run:
                shell: bash -el {0}

        steps:
        -   name: Checkout nilearn
            uses: actions/checkout@v4

        -   name: Install apt packages
            run: |
                sudo -E apt-get -yq update
                sudo -E apt-get -yq --no-install-suggests --no-install-recommends install \
                    dvipng texlive-latex-base texlive-latex-extra

        -   name: Setup python
            uses: actions/setup-python@v5
            with:
                python-version: '3.12'

        -   name: Install packages
            run: |
                python -m pip install --user --upgrade pip setuptools
                python -m pip install .[plotting,doc]

        # Update the authors file and the names file
        # in case a contributor has been added to citation.cff
        # but did not run the maint_tools/citation_cff_maint.py script.
        -   name: update AUTHORS.rst and doc/changes/names.rst
            run: python maint_tools/citation_cff_maint.py

        # Set up and launch a virtual browser needed for one example to run
        # without stalling the job. The example launches an html in the browser.
        -   name: Set up display server for virtual browser
            run: Xvfb -ac :99 -screen 0 1280x1024x16 > /dev/null 2>&1 &

        -   name: Build docs
            run: |
                cd doc;
                set -o pipefail;
                make install;
