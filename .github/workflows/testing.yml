---
name: build

on:
    push:
        branches:
        -   main
    pull_request:
        branches:
        -   '*'

jobs:
    min_requirements:
        if: github.repository == 'nilearn/nilearn'
        runs-on: ubuntu-latest
        name: Python 3.7, minimal requirements without Matplotlib
        defaults:
            run:
                shell: bash
        env:
            MIN_REQUIREMENTS: true
        steps:
        -   name: Checkout nilearn
            uses: actions/checkout@v4
        -   name: Setup python '3.7'
            uses: actions/setup-python@v4
            with:
                python-version: '3.7'
        -   name: Display Python version
            shell: bash -l {0}
            run: python -c "import sys; print(sys.version)"
        -   name: Install dependencies
            shell: bash -l {0}
            run: ./build_tools/github/dependencies.sh
        -   name: Install nilearn
            shell: bash -l {0}
            run: ./build_tools/github/install.sh
        -   name: Run tests
            shell: bash -l {0}
            run: ./build_tools/github/test.sh
        -   name: Upload coverage to CodeCov
            uses: codecov/codecov-action@v3
            if: success()

    min_requirements_matplotlib:
        if: github.repository == 'nilearn/nilearn'
        runs-on: ubuntu-latest
        name: Python 3.7, minimal requirements with Matplotlib
        defaults:
            run:
                shell: bash
        env:
            MIN_REQUIREMENTS: true
            MATPLOTLIB: true
        steps:
        -   name: Checkout nilearn
            uses: actions/checkout@v4
        -   name: Setup python
            uses: actions/setup-python@v4
            with:
                python-version: '3.7'
        -   name: Display Python version
            shell: bash -l {0}
            run: python -c "import sys; print(sys.version)"
        -   name: Install dependencies
            shell: bash -l {0}
            run: ./build_tools/github/dependencies.sh
        -   name: Install nilearn
            shell: bash -l {0}
            run: ./build_tools/github/install.sh
        -   name: Run tests
            shell: bash -l {0}
            run: ./build_tools/github/test.sh

    latest:
        if: github.repository == 'nilearn/nilearn'
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
                python-version: ['3.8', '3.9', '3.10', '3.11']
        name: ${{ matrix.os }} with Python ${{ matrix.python-version }} and latest package versions
        defaults:
            run:
                shell: bash
        steps:
        -   name: Checkout nilearn
            uses: actions/checkout@v4
        -   name: Setup python
            uses: actions/setup-python@v4
            with:
                python-version: ${{ matrix.python-version }}
        -   name: Display Python version
            shell: bash {0}
            run: python -c "import sys; print(sys.version)"
        -   name: Install dependencies
            shell: bash {0}
            run: ./build_tools/github/dependencies.sh
        -   name: Install nilearn
            shell: bash {0}
            run: ./build_tools/github/install.sh
        -   name: Run doctests
            shell: bash {0}
            run: ./build_tools/github/test_docs.sh
        -   name: Run tests
            shell: bash {0}
            run: ./build_tools/github/test.sh
        -   name: Upload coverage to CodeCov
            uses: codecov/codecov-action@v3
            with:
                flags: ${{ matrix.os }}_${{ matrix.python-version }}
            if: success()

    prerelease:
        if: github.repository == 'nilearn/nilearn'
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest]
                python-version: ['3.11']
        env:
            PIP_FLAGS: --pre
        name: ${{ matrix.os }} with Python ${{ matrix.python-version }} and pre-release dependencies
        defaults:
            run:
                shell: bash
        steps:
        -   name: Checkout nilearn
            uses: actions/checkout@v4
        -   name: Setup python
            uses: actions/setup-python@v4
            with:
                python-version: ${{ matrix.python-version }}
        -   name: Display Python version
            shell: bash {0}
            run: python -c "import sys; print(sys.version)"
        -   name: Install dependencies
            shell: bash {0}
            run: ./build_tools/github/dependencies.sh
        -   shell: bash {0}
            run: ./build_tools/github/install.sh
            name: Install nilearn
        -   shell: bash {0}
            run: ./build_tools/github/test_docs.sh
            name: Run doctests
        -   shell: bash {0}
            run: ./build_tools/github/test.sh
            name: Run tests
        -   name: Upload coverage to CodeCov
            uses: codecov/codecov-action@v3
            if: success()
