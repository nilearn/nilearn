# Documentation is built using Github Actions.
# CircleCI is only used to download the artifacts in order to host
# and deploy them.

version: 2.1

# Parameters required to trigger the execution
# of the "host_docs" job
parameters:
  GITHUB_RUN_URL:
    type: string
    default: "none"

jobs:
  host_docs:
    machine:
      image: ubuntu-2004:202111-01
    environment:
      GITHUB_ARTIFACT_URL: << pipeline.parameters.GITHUB_RUN_URL >>/doc.zip
    steps:
      - checkout
      - run: bash build_tools/circle/download_documentation.sh
      - store_artifacts:
          path: doc/_build/html/
          destination: dev
      # Persists the generated documentation, so that it
      # can be attached and deployed in the "deploy" job
      - persist_to_workspace:
          root: doc/_build
          paths:
              - html

  deploy:
    docker:
      - image: circleci/python:3.9
    steps:
      - add_ssh_keys:
          fingerprints:
            - "53:9f:4a:b1:56:9d:76:33:7a:e8:2e:a1:fe:41:81:34"
      - attach_workspace:
          at: /tmp/_build
      - run:
          name: Fetch docs
          command: |
              set -e
              mkdir -p ~/.ssh
              ssh-keyscan github.com >> ~/.ssh/known_hosts;
              if [ ! -d ~/nilearn.github.io ]; then
                git clone git@github.com:nilearn/nilearn.github.io.git ~/nilearn.github.io --depth=1
              fi
      - run:
          name: Deploy dev docs
          command: |
              set -e;
              if [ "${CIRCLE_BRANCH}" == "main" ]; then
                git config --global user.email "circle@nilearn.com";
                git config --global user.name "CircleCI";
                cd ~/nilearn.github.io;
                git checkout main
                git remote -v
                git fetch origin
                git reset --hard origin/main
                git clean -xdf
                echo "Deploying dev docs for ${CIRCLE_BRANCH}.";
                rm -Rf dev;
                cp -a /tmp/_build/html dev;
                git add -A;
                git commit -m "CircleCI update of dev docs (build: ${CIRCLE_BUILD_NUM}).";
                git push origin main;
              else
                echo "No deployment (build: ${CIRCLE_BRANCH}).";
              fi

workflows:
  version: 2

  host_and_deploy_doc:
    when:
      not:
        equal: [ "none", << pipeline.parameters.GITHUB_RUN_URL >> ]
    # The jobs should run only when triggered by the workflow
    jobs:
      - host_docs
      - deploy:
          requires:
              - host_docs
          filters:
            branches:
              only:
                - main