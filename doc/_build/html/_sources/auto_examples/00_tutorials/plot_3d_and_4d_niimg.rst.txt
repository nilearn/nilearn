
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/00_tutorials/plot_3d_and_4d_niimg.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_00_tutorials_plot_3d_and_4d_niimg.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_00_tutorials_plot_3d_and_4d_niimg.py:


3D and 4D niimgs: handling and visualizing
==========================================

Here we discover how to work with 3D and 4D niimgs.

.. GENERATED FROM PYTHON SOURCE LINES 9-15

Downloading tutorial datasets from Internet
--------------------------------------------

Nilearn comes with functions that download public data from Internet

Let's first check where the data is downloaded on our disk:

.. GENERATED FROM PYTHON SOURCE LINES 15-18

.. code-block:: default

    from nilearn import datasets
    print('Datasets are stored in: %r' % datasets.get_data_dirs())


.. GENERATED FROM PYTHON SOURCE LINES 19-20

Let's now retrieve a motor contrast from a Neurovault repository

.. GENERATED FROM PYTHON SOURCE LINES 20-23

.. code-block:: default

    motor_images = datasets.fetch_neurovault_motor_task()
    motor_images.images


.. GENERATED FROM PYTHON SOURCE LINES 24-25

motor_images is a list of filenames. We need to take the first one

.. GENERATED FROM PYTHON SOURCE LINES 25-28

.. code-block:: default

    tmap_filename = motor_images.images[0]



.. GENERATED FROM PYTHON SOURCE LINES 29-34

Visualizing a 3D file
----------------------

The file contains a 3D volume, we can easily visualize it as a
statistical map:

.. GENERATED FROM PYTHON SOURCE LINES 34-37

.. code-block:: default

    from nilearn import plotting
    plotting.plot_stat_map(tmap_filename)


.. GENERATED FROM PYTHON SOURCE LINES 38-39

Visualizing works better with a threshold

.. GENERATED FROM PYTHON SOURCE LINES 39-42

.. code-block:: default

    plotting.plot_stat_map(tmap_filename, threshold=3)



.. GENERATED FROM PYTHON SOURCE LINES 43-48

Visualizing one volume in a 4D file
-----------------------------------

We can download resting-state networks from the Smith 2009 study on
correspondence between rest and task

.. GENERATED FROM PYTHON SOURCE LINES 48-51

.. code-block:: default

    rsn = datasets.fetch_atlas_smith_2009()['rsn10']
    rsn


.. GENERATED FROM PYTHON SOURCE LINES 52-54

It is a 4D nifti file. We load it into the memory to print its
shape.

.. GENERATED FROM PYTHON SOURCE LINES 54-57

.. code-block:: default

    from nilearn import image
    print(image.load_img(rsn).shape)


.. GENERATED FROM PYTHON SOURCE LINES 58-59

We can retrieve the first volume (note that Python indexing starts at 0):

.. GENERATED FROM PYTHON SOURCE LINES 59-62

.. code-block:: default

    first_rsn = image.index_img(rsn, 0)
    print(first_rsn.shape)


.. GENERATED FROM PYTHON SOURCE LINES 63-66

first_rsn is a 3D image.

We can then plot it

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    plotting.plot_stat_map(first_rsn)



.. GENERATED FROM PYTHON SOURCE LINES 70-78

Looping on all volumes in a 4D file
-----------------------------------

If we want to plot all the volumes in this 4D file, we can use iter_img
to loop on them.

Then we give a few arguments to plot_stat_map in order to have a more
compact display.

.. GENERATED FROM PYTHON SOURCE LINES 78-84

.. code-block:: default

    for img in image.iter_img(rsn):
        # img is now an in-memory 3D img
        plotting.plot_stat_map(img, threshold=3, display_mode="z", cut_coords=1,
                               colorbar=False)



.. GENERATED FROM PYTHON SOURCE LINES 85-93

Looping through selected volumes in a 4D file
---------------------------------------------

If we want to plot selected volumes in this 4D file, we can use index_img
with the `slice` constructor to select the desired volumes.

Afterwards, we'll use iter_img to loop through them following the same
formula as before.

.. GENERATED FROM PYTHON SOURCE LINES 93-95

.. code-block:: default

    selected_volumes = image.index_img(rsn, slice(3, 5))


.. GENERATED FROM PYTHON SOURCE LINES 96-99

If you're new to Python, one thing to note is that the slice constructor
uses 0-based indexing. You can confirm this by matching these slices
to the previous plot above.

.. GENERATED FROM PYTHON SOURCE LINES 99-104

.. code-block:: default


    for img in image.iter_img(selected_volumes):
        plotting.plot_stat_map(img)



.. GENERATED FROM PYTHON SOURCE LINES 105-107

plotting.show is useful to force the display of figures when running
outside IPython

.. GENERATED FROM PYTHON SOURCE LINES 107-109

.. code-block:: default

    plotting.show()


.. GENERATED FROM PYTHON SOURCE LINES 110-128

|

______

To recap, neuroimaging images (niimgs as we call them) come in
different flavors:

* 3D images, containing only one brain volume
* 4D images, containing multiple brain volumes.

More details about the input formats in nilearn for 3D and 4D images is
given in the documentation section: :ref:`loading_data`.

Functions accept either 3D or 4D images, and we need to use on the one
hand :func:`nilearn.image.index_img` or :func:`nilearn.image.iter_img`
to break down 4D images into 3D images, and on the other hand
:func:`nilearn.image.concat_imgs` to group a list of 3D images into a 4D
image.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)

**Estimated memory usage:**  0 MB


.. _sphx_glr_download_auto_examples_00_tutorials_plot_3d_and_4d_niimg.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/00_tutorials/plot_3d_and_4d_niimg.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_3d_and_4d_niimg.py <plot_3d_and_4d_niimg.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_3d_and_4d_niimg.ipynb <plot_3d_and_4d_niimg.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
