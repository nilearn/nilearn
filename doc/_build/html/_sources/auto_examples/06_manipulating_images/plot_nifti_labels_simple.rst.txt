
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/06_manipulating_images/plot_nifti_labels_simple.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_06_manipulating_images_plot_nifti_labels_simple.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_06_manipulating_images_plot_nifti_labels_simple.py:


Extracting signals from brain regions using the NiftiLabelsMasker
=================================================================

This simple example shows how to extract signals from functional
:term:`fMRI` data and brain regions defined through an atlas.
More precisely, this example shows how to use the
:class:`~nilearn.maskers.NiftiLabelsMasker` object to perform this
operation in just a few lines of code.

.. include:: ../../../examples/masker_note.rst

.. GENERATED FROM PYTHON SOURCE LINES 16-20

Retrieve the brain development functional dataset

We start by fetching the brain development functional dataset
and we restrict the example to one subject only.

.. GENERATED FROM PYTHON SOURCE LINES 20-28

.. code-block:: default


    from nilearn import datasets
    dataset = datasets.fetch_development_fmri(n_subjects=1)
    func_filename = dataset.func[0]

    # print basic information on the dataset
    print('First functional nifti image (4D) is at: %s' % func_filename)


.. GENERATED FROM PYTHON SOURCE LINES 29-32

Load an atlas

We then load the Harvard-Oxford atlas to define the brain regions

.. GENERATED FROM PYTHON SOURCE LINES 32-38

.. code-block:: default

    atlas = datasets.fetch_atlas_harvard_oxford('cort-maxprob-thr25-2mm')

    # The first label correspond to the background
    print('The atlas contains {} non-overlapping regions'.format(
        len(atlas.labels) - 1))


.. GENERATED FROM PYTHON SOURCE LINES 39-41

Instantiate the mask and visualize atlas


.. GENERATED FROM PYTHON SOURCE LINES 41-59

.. code-block:: default

    from nilearn.maskers import NiftiLabelsMasker

    # Instantiate the masker with label image and label values
    masker = NiftiLabelsMasker(atlas.maps,
                               labels=atlas.labels,
                               standardize=True)

    # Visualize the atlas
    # Note that we need to call fit prior to generating the mask
    masker.fit()

    # At this point, no functional image has been provided to the masker.
    # We can still generate a report which can be displayed in a Jupyter
    # Notebook, opened in a browser using the .open_in_browser() method,
    # or saved to a file using the .save_as_html(output_filepath) method.
    report = masker.generate_report()
    report


.. GENERATED FROM PYTHON SOURCE LINES 60-61

Fitting the mask and generating a report

.. GENERATED FROM PYTHON SOURCE LINES 61-69

.. code-block:: default

    masker.fit(func_filename)

    # We can again generate a report, but this time, the provided functional
    # image is displayed with the ROI of the atlas.
    # The report also contains a summary table giving the region sizes in mm3
    report = masker.generate_report()
    report


.. GENERATED FROM PYTHON SOURCE LINES 70-74

Process the data with the NiftiLablesMasker

In order to extract the signals, we need to call transform on the
functional data

.. GENERATED FROM PYTHON SOURCE LINES 74-78

.. code-block:: default

    signals = masker.transform(func_filename)
    # signals is a 2D matrix, (n_time_points x n_regions)
    signals.shape


.. GENERATED FROM PYTHON SOURCE LINES 79-80

Plot the signals

.. GENERATED FROM PYTHON SOURCE LINES 80-91

.. code-block:: default

    import matplotlib.pyplot as plt

    fig = plt.figure(figsize=(15, 5))
    ax = fig.add_subplot(111)
    for label_idx in range(3):
        ax.plot(signals[:, label_idx],
                linewidth=2,
                label=atlas.labels[label_idx + 1])  # 0 is background
    ax.legend(loc=2)
    ax.set_title("Signals for first 3 regions")
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)

**Estimated memory usage:**  0 MB


.. _sphx_glr_download_auto_examples_06_manipulating_images_plot_nifti_labels_simple.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/06_manipulating_images/plot_nifti_labels_simple.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_nifti_labels_simple.py <plot_nifti_labels_simple.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_nifti_labels_simple.ipynb <plot_nifti_labels_simple.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
