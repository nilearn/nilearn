
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/01_plotting/plot_demo_plotting.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_01_plotting_plot_demo_plotting.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_01_plotting_plot_demo_plotting.py:


Plotting tools in nilearn
==========================

Nilearn comes with a set of plotting functions for easy visualization of
Nifti-like images such as statistical maps mapped onto anatomical images
or onto glass brain representation, anatomical images, functional/EPI images,
region specific mask images.

See :ref:`plotting` for more details.

.. GENERATED FROM PYTHON SOURCE LINES 14-16

Retrieve data from nilearn provided (general-purpose) datasets
---------------------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 16-37

.. code-block:: default


    from nilearn import datasets

    # haxby dataset to have EPI images and masks
    haxby_dataset = datasets.fetch_haxby()

    # print basic information on the dataset
    print('First subject anatomical nifti image (3D) is at: %s' %
          haxby_dataset.anat[0])
    print('First subject functional nifti image (4D) is at: %s' %
          haxby_dataset.func[0])  # 4D data

    haxby_anat_filename = haxby_dataset.anat[0]
    haxby_mask_filename = haxby_dataset.mask_vt[0]
    haxby_func_filename = haxby_dataset.func[0]

    # one motor contrast map from NeuroVault
    motor_images = datasets.fetch_neurovault_motor_task()
    stat_img = motor_images.images[0]



.. GENERATED FROM PYTHON SOURCE LINES 38-40

Plotting statistical maps with function `plot_stat_map`
--------------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 40-49

.. code-block:: default


    from nilearn import plotting

    # Visualizing t-map image on EPI template with manual
    # positioning of coordinates using cut_coords given as a list
    plotting.plot_stat_map(stat_img,
                           threshold=3, title="plot_stat_map",
                           cut_coords=[36, -27, 66])


.. GENERATED FROM PYTHON SOURCE LINES 50-56

Making interactive visualizations with function `view_img`
----------------------------------------------------------
An alternative to :func:`nilearn.plotting.plot_stat_map` is to use
:func:`nilearn.plotting.view_img` that gives more interactive
visualizations in a web browser. See :ref:`interactive-stat-map-plotting`
for more details.

.. GENERATED FROM PYTHON SOURCE LINES 56-62

.. code-block:: default


    view = plotting.view_img(stat_img, threshold=3)
    # In a Jupyter notebook, if ``view`` is the output of a cell, it will
    # be displayed below the cell
    view


.. GENERATED FROM PYTHON SOURCE LINES 63-68

.. code-block:: default


    # uncomment this to open the plot in a web browser:
    # view.open_in_browser()



.. GENERATED FROM PYTHON SOURCE LINES 69-74

Plotting statistical maps in a glass brain with function `plot_glass_brain`
---------------------------------------------------------------------------

Now, the t-map image is mapped on glass brain representation where glass
brain is always a fixed background template

.. GENERATED FROM PYTHON SOURCE LINES 74-77

.. code-block:: default

    plotting.plot_glass_brain(stat_img, title='plot_glass_brain',
                              threshold=3)


.. GENERATED FROM PYTHON SOURCE LINES 78-82

Plotting anatomical images with function `plot_anat`
-----------------------------------------------------

Visualizing anatomical image of haxby dataset

.. GENERATED FROM PYTHON SOURCE LINES 82-84

.. code-block:: default

    plotting.plot_anat(haxby_anat_filename, title="plot_anat")


.. GENERATED FROM PYTHON SOURCE LINES 85-91

Plotting ROIs (here the mask) with function `plot_roi`
-------------------------------------------------------

Visualizing ventral temporal region image from haxby dataset overlaid on
subject specific anatomical image with coordinates positioned automatically on
region of interest (roi)

.. GENERATED FROM PYTHON SOURCE LINES 91-94

.. code-block:: default

    plotting.plot_roi(haxby_mask_filename, bg_img=haxby_anat_filename,
                      title="plot_roi")


.. GENERATED FROM PYTHON SOURCE LINES 95-97

Plotting EPI image with function `plot_epi`
---------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 97-108

.. code-block:: default


    # Import image processing tool
    from nilearn import image

    # Compute the voxel_wise mean of functional images across time.
    # Basically reducing the functional image from 4D to 3D
    mean_haxby_img = image.mean_img(haxby_func_filename)

    # Visualizing mean image (3D)
    plotting.plot_epi(mean_haxby_img, title="plot_epi")


.. GENERATED FROM PYTHON SOURCE LINES 109-111

A call to plotting.show is needed to display the plots when running
in script mode (ie outside IPython)

.. GENERATED FROM PYTHON SOURCE LINES 111-112

.. code-block:: default

    plotting.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)

**Estimated memory usage:**  0 MB


.. _sphx_glr_download_auto_examples_01_plotting_plot_demo_plotting.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/01_plotting/plot_demo_plotting.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_demo_plotting.py <plot_demo_plotting.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_demo_plotting.ipynb <plot_demo_plotting.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
