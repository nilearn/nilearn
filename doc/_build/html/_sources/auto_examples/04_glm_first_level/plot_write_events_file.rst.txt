
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/04_glm_first_level/plot_write_events_file.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_04_glm_first_level_plot_write_events_file.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_04_glm_first_level_plot_write_events_file.py:


Generate an events.tsv file for the NeuroSpin localizer task
============================================================

Create a :term:`BIDS`-compatible events.tsv file from onset/trial-type
information.

The protocol described is the so-called "ARCHI Standard" functional localizer
task.

For details on the task, please see:

Pinel, P., Thirion, B., Meriaux, S. et al.
Fast reproducible identification and large-scale databasing of individual
functional cognitive networks.
BMC Neurosci 8, 91 (2007). https://doi.org/10.1186/1471-2202-8-91

.. GENERATED FROM PYTHON SOURCE LINES 18-21

.. code-block:: default


    print(__doc__)


.. GENERATED FROM PYTHON SOURCE LINES 22-25

Define the onset times in seconds. These are typically extracted from
the stimulation software used, but we will use hardcoded values in this
example.

.. GENERATED FROM PYTHON SOURCE LINES 25-38

.. code-block:: default

    import numpy as np

    onsets = np.array([
        0., 2.4, 8.7, 11.4, 15., 18., 20.7, 23.7, 26.7, 29.7, 33., 35.4, 39.,
        41.7, 44.7, 48., 56.4, 59.7, 62.4, 69., 71.4, 75., 83.4, 87., 89.7,
        96., 108., 116.7, 119.4, 122.7, 125.4, 131.4, 135., 137.7, 140.4,
        143.4, 146.7, 149.4, 153., 156., 159., 162., 164.4, 167.7, 170.4,
        173.7, 176.7, 188.4, 191.7, 195., 198., 201., 203.7, 207., 210.,
        212.7, 215.7, 218.7, 221.4, 224.7, 227.7, 230.7, 234., 236.7, 246.,
        248.4, 251.7, 254.7, 257.4, 260.4, 264., 266.7, 269.7, 275.4, 278.4,
        284.4, 288., 291., 293.4, 296.7,
    ])


.. GENERATED FROM PYTHON SOURCE LINES 39-41

Associated trial types: these are numbered between 0 and 9, hence
corresponding to 10 different conditions.

.. GENERATED FROM PYTHON SOURCE LINES 41-48

.. code-block:: default

    trial_type_idx = np.array([
        7, 7, 0, 2, 9, 4, 9, 3, 5, 9, 1, 6, 8, 8, 6, 6, 8, 0, 3, 4, 5, 8, 6,
        2, 9, 1, 6, 5, 9, 1, 7, 8, 6, 6, 1, 2, 9, 0, 7, 1, 8, 2, 7, 8, 3, 6,
        0, 0, 6, 8, 7, 7, 1, 1, 1, 5, 5, 0, 7, 0, 4, 2, 7, 9, 8, 0, 6, 3, 3,
        7, 1, 0, 0, 4, 1, 9, 8, 4, 9, 9,
    ])


.. GENERATED FROM PYTHON SOURCE LINES 49-51

We may want to map these indices to explicit condition names.
For that, we define a list of 10 strings.

.. GENERATED FROM PYTHON SOURCE LINES 51-66

.. code-block:: default

    condition_ids = [
        'horizontal checkerboard',
        'vertical checkerboard',
        'right button press, auditory instructions',
        'left button press, auditory instructions',
        'right button press, visual instructions',
        'left button press, visual instructions',
        'mental computation, auditory instructions',
        'mental computation, visual instructions',
        'visual sentence',
        'auditory sentence',
    ]

    trial_types = [condition_ids[i] for i in trial_type_idx]


.. GENERATED FROM PYTHON SOURCE LINES 67-69

We must also define a duration (required by :term:`BIDS` conventions).
In this case, all trials lasted one second.

.. GENERATED FROM PYTHON SOURCE LINES 69-71

.. code-block:: default

    durations = np.ones_like(onsets)


.. GENERATED FROM PYTHON SOURCE LINES 72-73

Form a pandas DataFrame from this information.

.. GENERATED FROM PYTHON SOURCE LINES 73-81

.. code-block:: default

    import pandas as pd

    events = pd.DataFrame({
        'trial_type': trial_types,
        'onset': onsets,
        'duration': durations,
    })


.. GENERATED FROM PYTHON SOURCE LINES 82-83

Take a look at the new DataFrame

.. GENERATED FROM PYTHON SOURCE LINES 83-85

.. code-block:: default

    events


.. GENERATED FROM PYTHON SOURCE LINES 86-87

Export them to a tsv file.

.. GENERATED FROM PYTHON SOURCE LINES 87-95

.. code-block:: default

    import os
    outdir = 'results'
    if not os.path.exists(outdir):
        os.mkdir(outdir)
    tsvfile = outdir + '/localizer_events.tsv'
    events.to_csv(tsvfile, sep='\t', index=False)
    print(f'The event information has been saved to {tsvfile}')


.. GENERATED FROM PYTHON SOURCE LINES 96-98

Optionally, the events can be visualized using the
:func:`~nilearn.plotting.plot_event` function.

.. GENERATED FROM PYTHON SOURCE LINES 98-103

.. code-block:: default

    import matplotlib.pyplot as plt
    from nilearn.plotting import plot_event

    plot_event(events, figsize=(15, 5))
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)

**Estimated memory usage:**  0 MB


.. _sphx_glr_download_auto_examples_04_glm_first_level_plot_write_events_file.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/04_glm_first_level/plot_write_events_file.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_write_events_file.py <plot_write_events_file.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_write_events_file.ipynb <plot_write_events_file.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
