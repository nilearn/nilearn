
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm_space_net.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm_space_net.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm_space_net.py:


Voxel-Based Morphometry on Oasis dataset with Space-Net prior
=============================================================

Predicting age from gray-matter concentration maps from OASIS
dataset. Note that age is a continuous variable, we use the regressor
here, and not the classification object.

See also the documentation: :ref:`space_net`.

.. GENERATED FROM PYTHON SOURCE LINES 14-16

Load the Oasis VBM dataset
---------------------------

.. GENERATED FROM PYTHON SOURCE LINES 16-40

.. code-block:: default

    import numpy as np
    from nilearn import datasets
    n_subjects = 200  # increase this number if you have more RAM on your box
    dataset_files = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    age = dataset_files.ext_vars['age'].astype(float)
    age = np.array(age)
    gm_imgs = np.array(dataset_files.gray_matter_maps)


    # Split data into training set and test set
    from sklearn.utils import check_random_state
    from sklearn.model_selection import train_test_split
    rng = check_random_state(42)
    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gm_imgs, age, train_size=.6, random_state=rng)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = gm_imgs_test[perm]



.. GENERATED FROM PYTHON SOURCE LINES 41-51

Fit the SpaceNet and predict with it
-------------------------------------
To save time (because these are anat images with many voxels), we include
only the 5-percent voxels most correlated with the age variable to fit.
Also, we set memory_level=2 so that more of the intermediate computations
are cached. We used a graph-net penalty here but more beautiful results can
be obtained using the TV-l1 penalty, at the expense of longer runtimes.
Also, you may pass and n_jobs=<some_high_value> to the
SpaceNetRegressor class, to take advantage of a multi-core system.


.. GENERATED FROM PYTHON SOURCE LINES 51-61

.. code-block:: default

    from nilearn.decoding import SpaceNetRegressor
    decoder = SpaceNetRegressor(memory="nilearn_cache", penalty="graph-net",
                                screening_percentile=5., memory_level=2)
    decoder.fit(gm_imgs_train, age_train)  # fit
    coef_img = decoder.coef_img_
    y_pred = decoder.predict(gm_imgs_test).ravel()  # predict
    mse = np.mean(np.abs(age_test - y_pred))
    print('Mean square error (MSE) on the predicted age: %.2f' % mse)



.. GENERATED FROM PYTHON SOURCE LINES 62-65

Visualize the decoding maps and quality of predictions
-------------------------------------------------------
Visualize the resulting maps

.. GENERATED FROM PYTHON SOURCE LINES 65-88

.. code-block:: default

    from nilearn.plotting import plot_stat_map, show
    # weights map
    background_img = gm_imgs[0]
    plot_stat_map(coef_img, background_img, title="graph-net weights",
                  display_mode="z", cut_coords=1)

    # Plot the prediction errors.
    import matplotlib.pyplot as plt
    plt.figure()
    plt.suptitle("graph-net: Mean Absolute Error %.2f years" % mse)
    linewidth = 3
    ax1 = plt.subplot(211)
    ax1.plot(age_test, label="True age", linewidth=linewidth)
    ax1.plot(y_pred, '--', c="g", label="Predicted age", linewidth=linewidth)
    ax1.set_ylabel("age")
    plt.legend(loc="best")
    ax2 = plt.subplot(212)
    ax2.plot(age_test - y_pred, label="True age - predicted age",
             linewidth=linewidth)
    ax2.set_xlabel("subject")
    plt.legend(loc="best")

    show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)

**Estimated memory usage:**  0 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm_space_net.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm_space_net.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm_space_net.py <plot_oasis_vbm_space_net.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm_space_net.ipynb <plot_oasis_vbm_space_net.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
