
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/05_glm_second_level/plot_proportion_activated_voxels.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_05_glm_second_level_plot_proportion_activated_voxels.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_05_glm_second_level_plot_proportion_activated_voxels.py:


Second-level fMRI model: true positive proportion in clusters
=============================================================

This script showcases the so-called "All resolution inference" procedure, in
which the proportion of true discoveries in arbitrary clusters is estimated.
The clusters can be defined from the input image, i.e. in a circular way, as
the error control accounts for arbitrary cluster selection.

Rosenblatt JD, Finos L, Weeda WD, Solari A, Goeman JJ. All-Resolutions
Inference for brain imaging. Neuroimage. 2018 Nov 1;181:786-796. doi:
10.1016/j.neuroimage.2018.07.060

.. GENERATED FROM PYTHON SOURCE LINES 17-22

Fetch dataset
--------------
We download a list of left vs right button press contrasts from a
localizer dataset. Note that we fetch individual t-maps that represent the
BOLD activity estimate divided by the uncertainty about this estimate.

.. GENERATED FROM PYTHON SOURCE LINES 22-30

.. code-block:: default

    from nilearn.datasets import fetch_localizer_contrasts
    n_subjects = 16
    data = fetch_localizer_contrasts(
        ["left vs right button press"], n_subjects,
        get_tmaps=True, legacy_format=False
    )
    from nilearn import plotting


.. GENERATED FROM PYTHON SOURCE LINES 31-35

Estimate second level model
---------------------------
We define the input maps and the design matrix for the second level model
and fit it.

.. GENERATED FROM PYTHON SOURCE LINES 35-40

.. code-block:: default

    import pandas as pd
    second_level_input = data['cmaps']
    design_matrix = pd.DataFrame([1] * len(second_level_input),
                                 columns=['intercept'])


.. GENERATED FROM PYTHON SOURCE LINES 41-42

Model specification and fit

.. GENERATED FROM PYTHON SOURCE LINES 42-47

.. code-block:: default

    from nilearn.glm.second_level import SecondLevelModel
    second_level_model = SecondLevelModel(smoothing_fwhm=8.0)
    second_level_model = second_level_model.fit(second_level_input,
                                                design_matrix=design_matrix)


.. GENERATED FROM PYTHON SOURCE LINES 48-50

To estimate the contrast is very simple. We can just provide the column
name of the design matrix.

.. GENERATED FROM PYTHON SOURCE LINES 50-52

.. code-block:: default

    z_map = second_level_model.compute_contrast(output_type='z_score')


.. GENERATED FROM PYTHON SOURCE LINES 53-54

We threshold the second level contrast at uncorrected p < 0.001 and plot

.. GENERATED FROM PYTHON SOURCE LINES 54-73

.. code-block:: default

    from scipy.stats import norm
    p_val = 0.001
    p001_uncorrected = norm.isf(p_val)

    from nilearn.glm import cluster_level_inference
    proportion_true_discoveries_img = cluster_level_inference(
        z_map, threshold=[3, 4, 5], alpha=.05)

    plotting.plot_stat_map(
        proportion_true_discoveries_img, threshold=0.,
        display_mode='z', vmax=1, colorbar=True,
        title='group left-right button press, proportion true positives')

    plotting.plot_stat_map(
        z_map, threshold=p001_uncorrected, colorbar=True, display_mode='z',
        title='group left-right button press (uncorrected p < 0.001)')


    plotting.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)

**Estimated memory usage:**  0 MB


.. _sphx_glr_download_auto_examples_05_glm_second_level_plot_proportion_activated_voxels.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/05_glm_second_level/plot_proportion_activated_voxels.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_proportion_activated_voxels.py <plot_proportion_activated_voxels.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_proportion_activated_voxels.ipynb <plot_proportion_activated_voxels.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
