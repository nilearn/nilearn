
.. currentmodule:: nilearn

.. include:: names.rst

0.5.0
=====

**Released November 2018**

NEW
---

  :ref:`interactive plotting functions <interactive-plotting>`,
  eg for use in a notebook.

- New functions :func:`nilearn.plotting.view_surf` and
  :func:`nilearn.plotting.view_img_on_surf` for interactive visualization of
  maps on the cortical surface in a web browser.

- New functions :func:`nilearn.plotting.view_connectome` and
  :func:`nilearn.plotting.view_markers` for interactive visualization of
  connectomes and seed locations in 3D

- New function :func:`nilearn.plotting.view_img` for interactive
  visualization of volumes with 3 orthogonal cuts.

:Note: :func:`nilearn.plotting.view_img` was `nilearn.plotting.view_stat_map` in alpha and beta releases.

- :func:`nilearn.plotting.find_parcellation_cut_coords` for
  extraction of coordinates on brain parcellations denoted as labels.

- Added :func:`nilearn.plotting.find_probabilistic_atlas_cut_coords` for
  extraction of coordinates on brain probabilistic maps.


**Minimum supported versions of packages have been bumped up.**
  - scikit-learn -- v0.18
  - scipy -- v0.17
  - pandas -- v0.18
  - numpy -- v1.11
  - matplotlib -- v1.5.1

**Nilearn Python2 support is being removed in the near future.**
  Users with a Python2 environment will be warned
  at their first Nilearn import.

**Additional dataset downloaders for examples and tutorials.**

- :func:`nilearn.datasets.fetch_surf_fsaverage`
- :func:`nilearn.datasets.fetch_atlas_pauli_2017`
- :func:`nilearn.datasets.fetch_neurovault_auditory_computation_task`
- :func:`nilearn.datasets.fetch_neurovault_motor_task`


ENHANCEMENTS
------------

 :func:`nilearn.image.clean_img` now accepts a mask to restrict
 the cleaning of the image, reducing memory load and computation time.

 NiftiMaskers now have a `dtype` parameter, by default keeping the same data type as the input data.

 Displays by plotting functions can now add a scale bar (see :ref:`plotting`)


IMPROVEMENTS
------------

 - Lots of other fixes in documentation and examples.
 - A cleaner layout and improved navigation for the website, with a better introduction.
 - Dataset fetchers are now  more reliable, less verbose.
 - Searchlight().fit() now accepts 4D niimgs.
 - Anaconda link in the installation documentation updated.
 - Scipy is listed as a dependency for Nilearn installation.

Notable Changes
---------------

 Default value of `t_r` in :func:`nilearn.signal.clean` and
 :func:`nilearn.image.clean_img` is None
 and cannot be None if `low_pass` or `high_pass` is specified.

Lots of changes and improvements. Detailed change list for each release follows.

0.5.0 rc
========

Highlights
----------

:func:`nilearn.plotting.view_img` (formerly `nilearn.plotting.view_stat_map` in
Nilearn 0.5.0 pre-release versions) generates significantly smaller notebooks
and HTML pages while getting a more consistent look and feel with Nilearn's
plotting functions. Huge shout out to Pierre Bellec (pbellec) for
making a great feature awesome and for sportingly accommodating all our feedback.

:func:`nilearn.image.clean_img` now accepts a mask to restrict the cleaning of
  the image. This approach can help to reduce the memory load and computation time.
  Big thanks to Michael Notter (miykael).

Enhancements
------------

- :func:`nilearn.plotting.view_img` is now using the brainsprite.js library,
  which results in much smaller notebooks or html pages. The interactive viewer
  also looks more similar to the plots generated by
  :func:`nilearn.plotting.plot_stat_map`, and most parameters found in
  `plot_stat_map` are now supported in `view_img`.
- :func:`nilearn.image.clean_img` now accepts a mask to restrict the cleaning of
  the image. This approach can help to reduce the memory load and computation time.
- :func:`nilearn.decoding.SpaceNetRegressor.fit` raises a meaningful error in regression tasks
  if the target Y contains all 1s.

Changes
-------

- Default value of `t_r` in :func:`nilearn.signal.clean` and
  :func:`nilearn.image.clean_img` is changed from 2.5 to None. If `low_pass` or
  `high_pass` is specified, then `t_r` needs to be specified as well otherwise
  it will raise an error.
- Order of filters in :func:`nilearn.signal.clean` and :func:`nilearn.image.clean_img`
  has changed to detrend, low- and high-pass filter, remove confounds and
  standardize. To ensure orthogonality between temporal filter and confound
  removal, an additional temporal filter will be applied on the confounds before
  removing them. This is according to Lindquist et al. (2018).
- :func:`nilearn.image.clean_img` now accepts a mask to restrict the cleaning of
  the image. This approach can help to reduce the memory load and computation time.
- :func:`nilearn.plotting.view_img` is now using the brainsprite.js library,
  which results in much smaller notebooks or html pages. The interactive viewer
  also looks more similar to the plots generated by
  :func:`nilearn.plotting.plot_stat_map`, and most parameters found in
  `plot_stat_map` are now supported in `view_img`.


Contributors
-------------

The following people contributed to this release::

  15 Gael Varoquaux
  114 Pierre Bellec
  30 Michael Notter
  28 Kshitij Chawla (kchawla-pi)
  4 Kamalakar Daddy
  4 himanshupathak21061998
  1 Horea Christian
  7 Jerome Dockes

0.5.0 beta
==========

Highlights
----------

**Nilearn Python2 support is being removed in the near future.
Users with a Python2 environment will be warned at their first Nilearn import.**

Enhancements
------------

Displays created by plotting functions can now add a scale bar
 to indicate the size in mm or cm (see :ref:`plotting`),
 contributed by Oscar Esteban

Colorbars in plotting functions now have a middle gray background
 suitable for use with custom colormaps with a non-unity alpha channel.
 Contributed by Eric Larson (larsoner)

Loads of fixes and quality of life improvements

- A cleaner layout and improved navigation for the website, with a better introduction.
- Less warnings and verbosity while using certain functions and during dataset downloads.
- Improved backend for the dataset fetchers means more reliable dataset downloads.
- Some datasets, such as the ICBM, are now compressed to take up less disk space.


Fixes
-----

- Searchlight().fit() now accepts 4D niimgs. Contributed by Dan Gale (danjgale).
- plotting.view_markers.open_in_browser() in js_plotting_utils fixed
- Brainomics dataset has been replaced in several examples.
- Lots of other fixes in documentation and examples.


Changes
-------

- In nilearn.regions.img_to_signals_labels, the See Also section in documentation now also points to NiftiLabelsMasker and NiftiMapsMasker
- Scipy is listed as a dependency for Nilearn installation.
- Anaconda link in the installation documentation updated.

Contributors
-------------

The following people contributed to this release::

  58  Gael Varoquaux
  115  Kshitij Chawla (kchawla-pi)
  15  Jerome Dockes
  14  oesteban
  10  Eric Larson
  6  Kamalakar Daddy
  3  Bertrand Thirion
  5  Alexandre Abadie
  4  Sourav Singh
  3  Alex Rothberg
  3  AnaLu
  3  Demian Wassermann
  3  Horea Christian
  3  Jason Gors
  3  Jean Remi King
  3  MADHYASTHA Meghana
  3  SRSteinkamp
  3  Simon Steinkamp
  3  jerome-alexis_chevalier
  3  salma
  3  sfvnMAC
  2  Akshay
  2  Daniel Gomez
  2  Guillaume Lemaitre
  2  Pierre Bellec
  2  arokem
  2  erramuzpe
  2  foucault
  2  jehane
  1  Sylvain LANNUZEL
  1  Aki Nikolaidis
  1  Christophe Bedetti
  1  Dan Gale
  1  Dillon Plunkett
  1  Dimitri Papadopoulos Orfanos
  1  Greg Operto
  1  Ivan Gonzalez
  1  Yaroslav Halchenko
  1  dtyulman

0.5.0 alpha
===========

This is an alpha release: to download it, you need to explicitly ask for
the version number::

   pip install nilearn==0.5.0a0

Highlights
----------

    - **Minimum supported versions of packages have been bumped up.**
        - scikit-learn -- v0.18
        - scipy -- v0.17
        - pandas -- v0.18
        - numpy -- v1.11
        - matplotlib -- v1.5.1

    - New :ref:`interactive plotting functions <interactive-plotting>`,
      eg for use in a notebook.

Enhancements
------------

    - All NiftiMaskers now have a `dtype` argument. For now the default behaviour
      is to keep the same data type as the input data.

    - Displays created by plotting functions can now add a scale bar to
      indicate the size in mm or cm (see :ref:`plotting`), contributed by
      Oscar Esteban

    - New functions :func:`nilearn.plotting.view_surf` and
      :func:`nilearn.plotting.view_surf` and
      :func:`nilearn.plotting.view_img_on_surf` for interactive visualization of
      maps on the cortical surface in a web browser.

    - New functions :func:`nilearn.plotting.view_connectome` and
      :func:`nilearn.plotting.view_markers` to visualize connectomes and
      seed locations in 3D

    - New function `nilearn.plotting.view_stat_map` (renamed to
      :func:`nilearn.plotting.view_img` in stable release) for interactive
      visualization of volumes with 3 orthogonal cuts.

    - Add :func:`nilearn.datasets.fetch_surf_fsaverage` to download either
      fsaverage or fsaverage 5 (Freesurfer cortical meshes).

    - Added :func:`nilearn.datasets.fetch_atlas_pauli_2017` to download a
      recent subcortical neuroimaging atlas.

    - Added :func:`nilearn.plotting.find_parcellation_cut_coords` for
      extraction of coordinates on brain parcellations denoted as labels.

    - Added :func:`nilearn.plotting.find_probabilistic_atlas_cut_coords` for
      extraction of coordinates on brain probabilistic maps.

    - Added :func:`nilearn.datasets.fetch_neurovault_auditory_computation_task`
      and :func:`nilearn.datasets.fetch_neurovault_motor_task` for simple example data.

Changes
-------

    - `nilearn.datasets.fetch_surf_fsaverage5` is deprecated and will be
      removed in a future release. Use :func:`nilearn.datasets.fetch_surf_fsaverage`,
      with the parameter mesh="fsaverage5" (the default) instead.

    - fsaverage5 surface data files are now shipped directly with Nilearn.
      Look to issue #1705 for discussion.

    - `sklearn.cross_validation` and `sklearn.grid_search` have been
      replaced by `sklearn.model_selection` in all the examples.

    - Colorbars in plotting functions now have a middle gray background
      suitable for use with custom colormaps with a non-unity alpha channel.


Contributors
------------

The following people contributed to this release::

    49  Gael Varoquaux
    180  Jerome Dockes
    57  Kshitij Chawla (kchawla-pi)
    38  SylvainLan
    36  Kamalakar Daddy
    10  Gilles de Hollander
    4  Bertrand Thirion
    4  MENUET Romuald
    3  Moritz Boos
    1  Peer Herholz
    1  Pierre Bellec